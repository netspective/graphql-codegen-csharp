{{#ifCond name "!=" 'Query'}}
public class {{ name }}GraphType : ObjectGraphType<{{ name }}> 
{
    public {{ name }}GraphType()
    {
        Name = "{{ name }}";
        Description = "{{ name }} has no description.";
        {{#fields}}
            Field(d => d.{{toPascalCase name }} , type: typeof{{#if this.isEnum}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<{{this.type}}EnumType>{{else}}{{this.type}}EnumType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/if}}{{#ifCond this.type "==" 'Boolean'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<BooleanGraphType>{{else}}BooleanGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#if this.isType}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<{{this.type}}GraphType>{{else}}{{this.type}}GraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/if}}{{#if this.isInputType}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<{{this.type}}GraphType>{{else}}{{this.type}}GraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/if}}{{#if this.isInterface}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<{{this.type}}GraphType>{{else}}{{this.type}}GraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/if}}{{#ifCond this.type "==" 'String'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<StringGraphType>{{else}}StringGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'Double'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<FloatGraphType>{{else}}FloatGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'Float'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<FloatGraphType>{{else}}FloatGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'Int'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<IntGraphType>{{else}}IntGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'Date'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<DateTimeOffsetGraphType>{{else}}DateTimeOffsetGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'DateTime'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<DateTimeOffsetGraphType>{{else}}DateTimeOffsetGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'EmailAddress'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<StringGraphType>{{else}}StringGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#ifCond this.type "==" 'Url'}}{{#if this.isRequired}}(NonNullGraphType<{{else}}({{/if}}{{#if this.isArray}}ListGraphType<StringGraphType>{{else}}StringGraphType{{/if}}{{#if this.isRequired}}>){{else}}){{/if}}{{/ifCond}}{{#if this.isRequired}}{{else}}, nullable: true{{/if}}).Description("{{toPascalCase name }}");
        {{/fields}}
    }
}
{{/ifCond}}
